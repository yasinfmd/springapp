services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch_springboot
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana_springboot
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash_springboot
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic
    depends_on:
      - elasticsearch

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_springboot
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_springboot
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      DB_VENDOR: h2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      PROXY_ADDRESS_FORWARDING: "true"
    ports:
      - "8080:8080"
    networks:
      - keycloak-network

  mysql:
    image: mysql:5.7
    restart: always
    container_name: mysql-container
    environment:
      MYSQL_DATABASE: 'mydatabase'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - db-network

  redis:
    image: redis:6.2
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - db-network

  mongo:
    image: mongo:4.4
    container_name: mongo-container
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - db-network

  mywork-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mywork-container
    ports:
      - "9001:9001"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/mydatabase
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_MONGODB_URI: mongodb://mongo-container:27017/mygrocerylist
      SPRING_REDIS_HOST: redis-container
    depends_on:
      - elasticsearch
      - kafka
      - keycloak
      - mysql
      - redis
      - mongo
    networks:
      - elastic
      - kafka
      - keycloak-network
      - db-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-container
    ports:
      - "8081:8080"
      - "50000:50000"
    environment:
      - JAVA_OPTS=-Duser.timezone=Europe/Istanbul
      - MYSQL_HOST=mysql-container
      - MYSQL_PORT=3306
    volumes:
      - jenkins-data:/var/jenkins_home
    networks:
      - db-network

networks:
  elastic:
    driver: bridge
  kafka:
    driver: bridge
  keycloak-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  mysql-data:
  redis-data:
  mongo-data:
  jenkins-data:
