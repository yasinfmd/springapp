spring.application.name=mywork
server.port=9001
#server.servlet.context-path=/mywork
debug=false
spring.thymeleaf.cache=false

#database
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://127.0.0.1:3307/mydatabase
#jdbc:mysql://awsdatabase.c92a20ousorx.us-east-1.rds.amazonaws.com
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# Connection pool settings (optional)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

#language
app.defaultLocale=tr

#file
file.upload-dir=uploads
file.base-url=http://127.0.0.1:9001/


spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB

spring.jackson.serialization.fail-on-empty-beans=false

springdoc.swagger-ui.path=/swagger-ui.html

spring.messages.basename=i18/messages

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.topic=test-topic
spring.main.allow-circular-references=true



#keycloack
# Keycloak Configuration
keycloak.realm=myJavaExampleRealm
keycloak.auth-server-url=http://localhost:8082/auth
keycloak.ssl-required=external
keycloak.resource=java-client
keycloak.public-client=true
keycloak.confidential-port=0
keycloak.cors = false
keycloak.cors-allowed-methods= POST, PUT, DELETE, GET
keycloak.enabled=true

# Spring Security Configuration
#spring.security.oauth2.client.registration.keycloak.client-id=myclient
#spring.security.oauth2.client.registration.keycloak.client-secret=secret
#spring.security.oauth2.client.registration.keycloak.scope=openid
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak
#spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
#spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.keycloak.user-info-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
